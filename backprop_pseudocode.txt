
for n = 2 to numlayers
   for j = 1 to size_n
      for k = 1 to size_(n - 1)
         theta_n,j += a_(n - 1),k * w_(n - 1),k,j
      next k
   a_i,j = f(theta_n,j)
   next j
next n

for i = 1 to size_(numlayers)
   omega_(numlayers, i) = T_i - a_(numlayers, i)
   phi_(numlayers, i) = omega_(numlayers, i)*f'(theta_(numlayers, i))

   for j = 1 to size_(numlayers - 1)
      deltaw_(numlayers-1),j,i = lambda*a_(numlayers-1, j)*phi_(numlayers, i)
   next j
next i

for n = numlayers - 2 to 1
   for k = 1 to size_(n + 1)
      for J = 1 to size(n + 2)
         omega_(n + 1, k) += phi_(n + 2, J)*w_(n + 1, k, J)
      next J

      phi_(n + 1, k) = omega(n + 1, k)*f'(theta_(n + 1, k))

      for m = 1 to size_(n)
         deltaw_(n, m, k) = lambda*a_(n, m)*phi_(n + 1, k)
      next m
   next k

   for k = 1 to size(n + 1)
      for j = 1 to size(n + 2)
         weights_(n + 1, k, j) += deltaw_(n + 1, k, j)
